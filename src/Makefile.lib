# SPK library multiple-machine Makefile

SHELL = /bin/sh

# Definitions

ROOT =	spk
EXE =	lib$(ROOT)_$@.a

SRC =	app.cpp app_chemistry.cpp app_grain.cpp comm_grain.cpp error.cpp finish.cpp input.cpp library.cpp memory.cpp random.cpp shell.cpp solve.cpp solve_gillespie.cpp solve_next_event_linear_search.cpp solve_next_event_tree_search.cpp solve_sweep.cpp spk.cpp timer.cpp universe.cpp variable.cpp

INC =	app.h app_chemistry.h app_grain.h comm_grain.h error.h finish.h input.h library.h memory.h random.h shell.h solve.h solve_gillespie.h solve_next_event_linear_search.h solve_next_event_tree_search.h solve_sweep.h spk.h style.h style_user.h sysptr.h timer.h universe.h variable.h

OBJ = 	$(SRC:.cpp=.o)

# Targets

help:
	@echo 'Type "make target" where target is one of:'
	@echo ''
	@files="`ls MAKE/Makefile.*`"; \
	for file in $$files; do head -1 $$file; done

clean:
	rm -r Obj_*

.DEFAULT:
	@test -f MAKE/Makefile.$@
	@if [ ! -d Obj_$@ ]; then mkdir Obj_$@; fi
	@cp -p $(SRC) $(INC) Obj_$@
	@cp MAKE/Makefile.$@ Obj_$@/Makefile
	@cd Obj_$@; \
	$(MAKE)  "OBJ = $(OBJ)" "INC = $(INC)" "EXE = ../$(EXE)" lib
	@if [ -d Obj_$@ ]; then cd Obj_$@; rm $(SRC) $(INC) Makefile*; fi
