"Previous Section"_Section_start.html - "KMC WWW Site"_kws - "KMC Documentation"_kd - "KMC Commands"_kc - "Next Section"_Section_howto.html :c

:link(kws,http://KMC.sandia.gov)
:link(kd,Manual.html)
:link(kc,Section_commands.html#comm)

:line

3. Commands :h3

This section describes how a KMC input script is formatted and what
commands are used to define a KMC simulation.

3.1 "KMC input script"_#3_1
3.2 "Parsing rules"_#3_2
3.3 "Input script structure"_#3_3
3.4 "Commands listed by category"_#3_4
3.5 "Commands listed alphabetically"_#3_5 :all(b)

:line

3.1 KMC input script :link(3_1),h4

KMC executes by reading commands from a input script (text file),
one line at a time.  When the input script ends, KMC exits.  Each
command causes KMC to take some action.  It may set an internal
variable, read in a file, or run a simulation.  Most commands have
default settings, which means you only need to use the command if you
wish to change the default.

In many cases, the ordering of commands in an input script is not
important.  However the following rules apply:

(1) KMC does not read your entire input script and then perform a
simulation with all the settings.  Rather, the input script is read
one line at a time and each command takes effect when it is read.
Thus this sequence of commands:

timestep 0.5 
run      100 
run      100 :pre

does something different than this sequence:

run      100 
timestep 0.5 
run      100 :pre

In the first case, the specified timestep (0.5 fmsec) is used for two
simulations of 100 timesteps each.  In the 2nd case, the default
timestep (1.0 fmsec) is used for the 1st 100 step simulation and a 0.5
fmsec timestep is used for the 2nd one.

(2) Some commands are only valid when they follow other commands.  For
example you cannot set the temperature of a group of atoms until atoms
have been defined and a group command is used to define which atoms
belong to the group.

(3) Sometimes command B will use values that can be set by command A.
This means command A must precede command B in the input script if it
is to have the desired effect.  For example, the
"read_data"_read_data.html command initializes the system by setting
up the simulation box and assigning atoms to processors.  If default
values are not desired, the "processors"_processors.html and
"boundary"_boundary.html commands need to be used before read_data to
tell KMC how to map processors to the simulation box.

Many input script errors are detected by KMC and an ERROR or
WARNING message is printed.  "This section"_Section_errors.html gives
more information on what errors mean.  The documentation for each
command lists restrictions on how the command can be used.

:line

3.2 Parsing rules :link(3_2),h4

Each non-blank line in the input script is treated as a command.
KMC commands are case sensitive.  Command names are lower-case, as
are specified command arguments.  Upper case letters may be used in
file names or user-chosen ID strings.

Here is how each line in the input script is parsed by KMC:

(1) If the line ends with a "&" character (with no trailing
whitespace), the command is assumed to continue on the next line.  The
next line is concatenated to the previous line by removing the "&"
character and newline.  This allows long commands to be continued
across two or more lines.

(2) All characters from the first "#" character onward are treated as
comment and discarded.

(3) The line is searched repeatedly for $ characters which indicate
variables that are replaced with text.  If the $ is followed by curly
brackets, then the variable name is the text inside the curly
brackets.  If no curly brackets follow the $, then the variable name
is the character immediately following the $.  Thus $\{myTemp\} and $x
refer to variable names "myTemp" and "x".  See the
"variable"_variable.html command for details of how values are
assigned to variables and how they are substituted for in input
scripts.

(4) The line is broken into "words" separated by whitespace (tabs,
spaces).  Note that words can thus contain letters, digits,
underscores, or punctuation characters.

(5) The first word is the command name.  All successive words in the
line are arguments.

(6) Text with spaces can be enclosed in double quotes so it will be
treated as a single argument.  See the "dump modify"_dump_modify.html
or "fix print"_fix_print.html commands for examples.  A '#' or '$'
character that in text between double quotes will not be treated as a
comment or substituted for as a variable.

:line

3.3 Input script structure :h4,link(3_3)

This section describes the structure of a typical KMC input script.
The "examples" directory in the KMC distribution contains many
sample input scripts; the corresponding problems are discussed in
"this section"_Section_example.html, and animated on the "KMC WWW
Site"_lws.

A KMC input script typically has 4 parts:

Initialization
Atom definition
Settings
Run a simulation :ol

The last 2 parts can be repeated as many times as desired.  I.e. run a
simulation, change some settings, run some more, etc.  Each of the 4
parts is now described in more detail.  Remember that almost all the
commands need only be used if a non-default value is desired.

(1) Initialization

Set parameters that need to be defined before atoms are created or
read-in from a file.

The relevant commands are "units"_units.html,
"dimension"_dimension.html, "newton"_newton.html,
"processors"_processors.html, "boundary"_boundary.html,
"atom_style"_atom_style.html, "atom_modify"_atom_modify.html.

If force-field parameters appear in the files that will be read, these
commands tell KMC what kinds of force fields are being used:
"pair_style"_pair_style.html, "bond_style"_bond_style.html,
"angle_style"_angle_style.html, "dihedral_style"_dihedral_style.html,
"improper_style"_improper_style.html.

(2) Atom definition

There are 3 ways to define atoms in KMC.  Read them in from a data
or restart file via the "read_data"_read_data.html or
"read_restart"_read_restart.html commands.  These files can contain
molecular topology information.  Or create atoms on a lattice (with no
molecular topology), using these commands: "lattice"_lattice.html,
"orient"_orient.html, "origin"_origin.html, "region"_region.html,
"create_box"_create_box.html, "create_atoms"_create_atoms.html.  The
entire set of atoms can be duplicated to make a larger simulation
using the "replicate"_replicate.html command.

(3) Settings

Once atoms and molecular topology are defined, a variety of settings
can be specified: force field coefficients, simulation parameters,
output options, etc.

Force field coefficients are set by these commands (they can also be
set in the read-in files): "pair_coeff"_pair_coeff.html,
"bond_coeff"_bond_coeff.html, "angle_coeff"_angle_coeff.html,
"dihedral_coeff"_dihedral_coeff.html,
"improper_coeff"_improper_coeff.html,
"kspace_style"_kspace_style.html, "dielectric"_dielectric.html,
"special_bonds"_special_bonds.html.

Various simulation parameters are set by these commands:
"temperature"_temperature.html, "temp_modify"_temp_modify.html,
"neighbor"_neighbor.html, "neigh_modify"_neigh_modify.html,
"group"_group.html, "timestep"_timestep.html,
"reset_timestep"_reset_timestep.html, "run_style"_run_style.html,
"min_style"_min_style.html, "min_modify"_min_modify.html.

Fixes impose a variety of boundary conditions, time integration, and
diagnostic options.  The "fix"_fix.html command comes in many flavors.

Output options are set by these commands: "thermo"_thermo.html,
"dump"_dump.html, "restart"_restart.html.

(4) Run a simulation

A molecular dynamics simulation is run using the "run"_run.html
command.  Energy minimization (molecular statics) is performed using
the "minimize"_minimize.html command.  A parallel tempering
(replica-exchange) simulation can be run using the
"temper"_temper.html command.

:line

3.4 Commands listed by category :link(3_4),h4

This section lists all KMC commands, grouped by category.  The
"next section"_#3_5 lists the same commands alphabetically.  Note that
some style options for some commands are part of specific KMC
packages, which means they cannot be used unless the package was
included when KMC was built.  Not all packages are included in a
default KMC build.  These dependencies are listed as Restrictions
in the command's documentation.

Miscellaneous:

"clear"_clear.html, "echo"_echo.html, "include"_include.html,
"jump"_jump.html, "label"_label.html, "log"_log.html,
"next"_next.html, "print"_print.html, "shell"_shell.html,
"variable"_variable.html

:line

3.5 Individual commands :h4,link(3_5),link(comm)

This section lists all KMC commands alphabetically, with a separate
listing below of styles within certain commands.  The "previous
section"_#3_4 lists the same commands, grouped by category.  Note that
some style options for some commands are part of specific KMC
packages, which means they cannot be used unless the package was
included when KMC was built.  Not all packages are included in a
default KMC build.  These dependencies are listed as Restrictions
in the command's documentation.

"clear"_clear.html,
"echo"_echo.html,
"include"_include.html,
"jump"_jump.html,
"label"_label.html,
"log"_log.html,
"next"_next.html,
"print"_print.html,
"shell"_shell.html,
"variable"_variable.html :tb(c=6,ea=c)
